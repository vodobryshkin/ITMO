"""
Название программы: Лабораторная работа №3
Автор: (c) Добрышкин Владимир Александрович
Дата создания: 10.10.2024
Описание: Лабораторная работа по дисциплине "Информатика" по работе с регулярными выражениями (regular expressions)
Версия: 1.0
"""


from tools.compare_results import compare_results  # функция для того, чтобы сверить собственные ответы и ответы,
# полученные от функций

import re

# 1 тест - неправильное количество слогов
# 2 тест - правильное хайку
# 3 тест - количество строк меньше 3
# 4 тест - количество строк бльше 3
# 5 тест - парвильное хайку


# Функция для решения первого дополнительного задания (Хайку)
def additional_solution_4_mark(text):
    # Если в строке количество разделителей строк не равно 2, то подано не 3 строки. В данном условном операторе это
    # проверяется с помощью количества совпадений с регулярным выражением r"/".
    if len(re.findall(r"/", text)) != 2:
        return "Не хайку. Должно быть 3 строки."

    # В исходном тексте, переведённом в нижний регистр, заменяются все символы кроме гласных и слэша на символ пустоты,
    # так как для подсчёта слогов необходимо учитывать лишь количество гласных. Слэш остаётся как разделитель.
    text = re.sub(r'[^аоэеиыуёюя/]', '', text.lower())

    # Проверка полного совпадения отредактированного текста с регулярным выражением. В данном случае, гласную можно
    # записать как [^/], так как кроме гласных и слэша символов в строке нет.
    if re.fullmatch(r'[^/]{5}/[^/]{7}/[^/]{5}', text):
        return "Хайку!"

    # Если программа выполнилась до этого момента, то исходное выражение не является хайку.
    return "Не хайку."


def main():
    results = []

    # print(additional_solution_4_mark(open(f"test.txt", mode='r', encoding='utf-8').read()))

    # Получение ответа для каждого из тестов
    for i in range(5):
        test = additional_solution_4_mark(open(f"tests\\additional task 4 mark\\test{i + 1}.txt", mode='r', encoding='utf-8').read())
        results.append(str(test))

    for i in range(5):
        print(f'Ответ программы на {i + 1} тест - {results[i]}')

    # Сравнение ответов самостоятельного и программного решений
    print(compare_results(f"config\\additional task 4 mark.csv", results, "add1"))


if __name__ == '__main__':
    main()
